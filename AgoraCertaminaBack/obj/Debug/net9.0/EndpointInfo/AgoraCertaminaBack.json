{
  "openapi": "3.0.4",
  "info": {
    "title": "AgoraCertaminaBack",
    "version": "1.0"
  },
  "paths": {
    "/account/tenant": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/tenant/{tenantId}/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "HasPermissionOnAction_AddUsers___False"
            ]
          }
        ]
      }
    },
    "/account/users": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "paginationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "HasPermissionOnAction_ReadUsers___False"
            ]
          }
        ]
      }
    },
    "/account/user/{username}": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "HasPermissionOnAction_UpdateUsers___False"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "HasPermissionOnAction_DeleteUsers___False"
            ]
          }
        ]
      }
    },
    "/account/groups": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "HasPermissionOnAction_ReadGroups___False"
            ]
          }
        ]
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "AgoraCertaminaBack"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/debug/aws-config": {
      "get": {
        "tags": [
          "AgoraCertaminaBack"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/exchange/{code}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/form": {
      "post": {
        "tags": [
          "Form"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Form"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOListGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOListGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOListGenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/form/{formId}": {
      "get": {
        "tags": [
          "Form"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDTOGenericResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Form"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenant": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDTOListGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDTOListGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDTOListGenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenantId}": {
      "delete": {
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitGenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionFormTagRequest": {
        "required": [
          "color",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TagCategory"
          },
          "subcategory": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAdminRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFormRequest": {
        "required": [
          "formName"
        ],
        "type": "object",
        "properties": {
          "formName": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionFormTagRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTenantRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldDTO": {
        "required": [
          "catalogId",
          "id",
          "name",
          "order",
          "section",
          "subSection"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "subSection": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/FieldTypeEnum"
          },
          "isRequired": {
            "type": "boolean"
          },
          "staticValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomTagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TagCategory"
          },
          "subcategory": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "FormDTO": {
        "required": [
          "formName",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "countSchemaFields": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTagDTO"
            },
            "nullable": true
          },
          "formFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldDTO"
            },
            "nullable": true
          },
          "launchType": {
            "$ref": "#/components/schemas/LaunchType"
          }
        },
        "additionalProperties": false
      },
      "FormDTOGenericResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "$ref": "#/components/schemas/FormDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormDTOListGenericResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDTO"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "LaunchType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringGenericResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagCategory": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TenantDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "catalogsCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TenantDTOListGenericResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantDTO"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenDTO": {
        "type": "object",
        "properties": {
          "identityToken": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Unit": {
        "type": "object",
        "additionalProperties": false
      },
      "UnitGenericResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "$ref": "#/components/schemas/Unit"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRequest": {
        "required": [
          "email",
          "lastname",
          "name",
          "roles"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}